package ChessPrj;

public class King extends ChessPiece{
  
  /* A flag variable for whether a piece has moved yet.*/
  private boolean flag; 

  public King(Player player){
    super(player);
    flag = false;
  }
  
  public String type(){
    return "King";
  }
  
  public boolean isValidMove(Move move, IChessPiece[][] board){
    //Valid King moves: One space in any direction.
    //                : Can only move if the move won't put the
    //                  piece in check.
    // Return false if any of these cases are FALSE.
    
    //Checks to see if the superclass isValidMove is false.
    if(super.isValidMove(move, board) == false)
      return false;
      
    //Checks to see if the King is moving more than one square
    //vertically.
    if(Math.abs(move.toRow - move.fromRow) > 1)
      return false;
    
    //Checks to see if the King is moving more than one square
    //horizantally.
    if(Math.abs(move.toColumn - move.fromColumn) > 1)
      return false;
      
    //Checks to see if the King will be in check if moved.
    if(inCheck(toRow, toColumn) == true)
      return false;
  }

  //TODO: Castling with Rook.
}
