package ChessPrj;

public class Rook extends ChessPiece{

  /* A flag variable for whether a piece has moved yet.*/
  private boolean flag;

  public Rook(Player player){
    super(player);
    flag = false;
  }

  public String type(){
    return "Rook";
    flag = false;
  }

  public boolean isVaildMove(Move move, IChessPiece[][] board){
    //Valid Rook moves: Forward & backward any number of unoccupied squares.
    //                : Horizontally & vertically any number of unoccupied squares.
    //                : Take an enemy piece from any vaild direction.
    //                : //TODO: Rule for castling.
    // Return false if any of these cases are FALSE
    
    //Checks to see if the superclass isValidMove is false.
    if(super.isValidMove == false)
      return false;
    
    //Checks to see if the rook isn't moving over empty squares.
    if(super.moveIsOnlyOverEmptySquares(move, board) == false)
      return false;
      
    //Checks to see if the piece is moving diagonally.  
    if(move.fromRow != move.toRow && move.fromColumn != move.toColumn)
      return false;
      
    else
      return true;
  }
  
  //TODO: Castling with King.
}
