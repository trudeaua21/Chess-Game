package chess;

import java.awt.*;
import java.awt.event.*;
import javax.swing.*;

public class ChessPanel extends JPanel{

	   private JButton[][] board;   
	  // private ChessModel model;
	   
	   private ImageIcon blkPawn;
	   private ImageIcon whtPawn;
	   private ImageIcon blkKnight;
	   private ImageIcon whtKnight;
	   private ImageIcon blkRook;
	   private ImageIcon whtRook;
	   private ImageIcon blkBishop;
	   private ImageIcon whtBishop;
	   private ImageIcon blkQueen;
	   private ImageIcon whtQueen;
	   private ImageIcon blkKing;
	   private ImageIcon whtKing;

	   // declare other instance variables as needed

	   private ButtonListener buttonListener = new ButtonListener();

	   public ChessPanel() {
	      board = new JButton[8][8];
	     // model = new ChessModel();
	      int i = 0;
	      setLayout(new GridLayout(8,8));
	      
	      blkPawn = new ImageIcon("bPawn.png");
	      whtPawn = new ImageIcon("wPawn.png");
	      
	      blkRook = new ImageIcon("bRook.png");
	      whtRook = new ImageIcon("wRook.png");
	      
	      blkKnight = new ImageIcon("bKnight.png");
	      whtKnight = new ImageIcon("wKnight.png");
	      
	      blkBishop = new ImageIcon("bBishop.png");
	      whtBishop = new ImageIcon("wBishop.png");
	      
	      blkQueen = new ImageIcon("bQueen.png");
	      whtQueen = new ImageIcon("wQueen.png");
	      
	      blkKing = new ImageIcon("bKing.png");
	      whtKing = new ImageIcon("wKing.png");
	      
	      //makes a board with alternating black and white buttons
	      //and pieces in their respective locations
	      for(int row = 0; row < 8; row++){
	         for(int col = 0; col < 8; col++){
	        	 if(row == 0){
	        		 board[row][0] = new JButton(blkRook);
	        		 board[row][1] = new JButton(blkKnight);
	        		 board[row][2] = new JButton(blkBishop);
	        		 board[row][3] = new JButton(blkQueen);
	        		 board[row][4] = new JButton(blkKing);
	        		 board[row][5] = new JButton(blkBishop);
	        		 board[row][6] = new JButton(blkKnight);
	        		 board[row][7] = new JButton(blkRook);
	        	 }
	        	 else if(row == 1)
	        		 board[row][col] = new JButton(blkPawn);
	        	 else if(row == 6)
	        		 board[row][col] = new JButton(whtPawn);
	        	 else if(row == 7){
	        		 board[row][0] = new JButton(whtRook);
	        		 board[row][1] = new JButton(whtKnight);
	        		 board[row][2] = new JButton(whtBishop);
	        		 board[row][3] = new JButton(whtQueen);
	        		 board[row][4] = new JButton(whtKing);
	        		 board[row][5] = new JButton(whtBishop);
	        		 board[row][6] = new JButton(whtKnight);
	        		 board[row][7] = new JButton(whtRook);
	        	 }
	        	 else
	        		 board[row][col] = new JButton();
//	            //make a white space
	            if((row % 2 == 0 && col % 2 == 0) || (row % 2 == 1 && col % 2 == 1)) {
	               //button w/ white icon
	            	board[row][col].setBackground(Color.WHITE);
	            }
//	            //make a black space
	            else{
	               //button w/ black icon
	            	board[row][col].setBackground(Color.BLACK);
	            }
	            //board[row][col].setOpaque(true);
	            board[row][col].setBorder(null);
	            add(board[row][col]);
	            i++;
	         }
	      }
	      
	  
	      
	      
	      
	   }

	   // method that updates the board
	   private void displayBoard() {
	    // complete this
	   }

	   // add other helper methods as needed

	   // inner class that represents action listener for buttons
	   private class ButtonListener implements ActionListener {

	     public void actionPerformed(ActionEvent event) {
	     // complete this
	     }
	     
	  }
}
